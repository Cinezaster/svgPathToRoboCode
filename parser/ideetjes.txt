

node js.
svg parsig levert een lijst op van coordinaten en formules
Van elke kromme of rechte de afstand meten. totale tijd berekenen aan de hand van de gekozen snelheid.
beziere curve toevoegen tussen een nieuwe lijn zodat een optimale speed kan aan gehouden worden

omzetten van de paden naar hoeken en array van commando's. Houd rekening met een constante snelheid en acceleratie en declaratie van de armen
communicatie naar arduino.

arduino
Accelstepper liberary
communicatie + buffer

Buffer
Node js voorziet een arry met commando's:
	⁃	steps 1 
	⁃	steps 2
	⁃	speed 1
	⁃	speed 2
	⁃	Accel 1
	⁃	Accel 2
	⁃	startSpeed1
	⁃	startSpeed2
	⁃	index
	⁃	Licht aan

node zend start commando
arduino antwoord met index 0
node stuur commando met index 0
Als Arduino leest het uit dan antwoord index+1
node stuurt commando met index+1 
Als index+1 niet meer bestaat in de node array zend stop commando.

stepper sequensie:
arduino ontvangt commando set alles en triggert run.
arduino set volgende settings en wacht tot de run returned 
Als run returned trigger run en set volgende settings


???? Kunnen we acceleratie formule aanpassen in Accelstepper
Om een cirkel te maken hebben we twee sinus versnellingen nodig 


Ideetjes.
De installatie voor een muur plaatsen met een laser erop, gericht naar een muur die met fosforiseerde verf behandeld is. Als de installatie dan begint te draaien blijft een lijnen spel op de muur zichtbaar.

http://www.instructables.com/id/Artibot-a-portrait-painting-robot/
http://www.instructables.com/id/Robotic-Arm-with-Servo-Motors/
http://en.wikipedia.org/wiki/B%C3%A9zier_curve cubic curves

http://www.w3.org/TR/SVGTiny12/paths.html#PathDataCubicBezierCommands svg shit

Ge maakt een svg tekening met een rode circle. Deze wordt als basis gebruikt om in het bereik van de light painter te tekenen.
Men tekent alleen in de cirkel met paths. Alles met fill wordt genegeerd. 
Js script zet alles om naar step functies.
Het script houd rekening met acceleraties en declaraties. Als paden niet op elkaar volgen gaat deze een andere bezier curve toevoegen om de twee hoeken met elkaar te linken. De lamp wordt dan uitgeschakeld. Als er een hoek gemaakt worden vorige en volgende vector doorgetrokken en een nieuwe bezier uitgewerkt tussen deze twee punten. De lamp wordt uitgeschakeld.

http://pomax.github.io/bezierinfo/ te gekke info over bezier curves interessant voor parsing tool. Zie §15 Tracing a curve at fixed distance intervals

configs: 
d = distance
s = speed
l = led on/off
robotType = scara, cartesiaans, 2 wire.

stap 1: svg parsen en curves eruit halen
stap 2: curves toevoegen om curves aan een te binden (ook start en stop curve) 
stap 3: distance gebruiken om curves in punten om te zetten.

stap 4: omzetten van punten naar hoeken adhv speed

opmerking stap 2: hoe bepalen hoe ver de vector van de rechte is als men an curve naar een rechte gaat.
Waar entered men een circle?

opmerking stap 4: Naar gelang het type robot wordt hier een ander functie aangeroepen






